name: 'Run the Windows App Certification Kit'
description: 'Allows to run the Windows App Certification Kit (WACK) and generate test results'
inputs:
  name:
    description: "Name of the WACK execution"
    required: true
  package-path:
    description: "Relative path of the target package to test with the WACK (appxbundle or msixbundle file)"
    required: true
  report-name:
    description: "Desired name of the certification report"
    required: true
  ignore-rules:
    description: "List of WACK rules to ignore separated by a comma (optional)"
    required: false
  threat-as-warning-rules:
    description: "List of WACK rules to threat as warning if failed separated by a comma (optional)"
    required: false

outputs:
  report-path:
    description: "Path of the certification report"
    value: ${{ steps.certification.outputs.reportPath }}

runs:
  using: "composite"
  steps:
    - name: Ensure Windows runner type
      shell: pwsh
      run: >
        if (-not $IsWindows) {
            Write-Host "ERROR: this action is only compatible with Windows!"
            Write-Host
            Exit 1
        }

    - name: "Create a check run"
      id: check-run
      uses: actions/github-script@v6
      with:
        script: |
          await github.rest.checks.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            head_sha: context.sha,
            name: "${{ inputs.name }}",
            status: "in_progress",
            output: {
              title: "",
              summary: ""
            },
          });

    - name: Run the Windows App Certification Kit
      id: certification
      shell: pwsh
      run: >
        ${{ github.action_path }}\scripts\Run-WACK.ps1
        "${{ inputs.package-path }}"
        "${{ inputs.report-name }}"

    - name: Analyze the Windows App Certificat Kit results
      id: analysis
      shell: pwsh
      run: >
        ${{ github.action_path }}\scripts\Analyze-Results.ps1
        "${{ steps.certification.outputs.reportPath }}"
        "${{ inputs.ignore-rules }}"
        "${{ inputs.threat-as-warning-rules }}"

    - name: "Update the check run conclusion"
      uses: actions/github-script@v6
      if: steps.analysis.conclusion != 'skipped'
      env:
        summary_file: '${{ steps.analysis.outputs.summaryPath }}'
      with:
        script: |
          const summary = require("fs").readFileSync(process.env.summary_file, "utf-8");
          await github.rest.checks.update({
            id: ${{ fromJson(steps.check-run.outputs.result).data.id }},
            status: "completed",
            conclusion: "${{ steps.analysis.conclusion }}",
            output: {
              title: "${{ steps.analysis.outputs.title }}",
              summary: summary
            },
          });

branding:
  icon: check-circle
  color: green